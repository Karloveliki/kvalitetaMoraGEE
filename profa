/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[16.246564530619207, 43.56864765332039],
          [16.246564530619207, 43.47703654992279],
          [16.50062336850983, 43.47703654992279],
          [16.50062336850983, 43.56864765332039]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/*var image =ee.ImageCollection('COPERNICUS/S2')
                  .filterDate('2018-01-01', '2018-01-31')
                  // Pre-filter to get less cloudy granules.
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))

var image = ee.Image('CGIAR/SRTM90_V4');
                 
print('S2 image', image);
                 
Map.setCenter(16.5,43.5, 9); // Center on the Grand Canyon.

// Display the image on the map.
Map.addLayer(image, {min: 0, max: 3000, palette: ['blue', 'green', 'red']},
    'custom palette');
   
var first = ee.ImageCollection('COPERNICUS/S2_SR')
                .filterBounds(ee.Geometry.Point(16.5, 43.3631))
                .filterDate('2019-01-01', '2019-01-05')
                .sort('CLOUDY_PIXEL_PERCENTAGE')
                .first();
Map.centerObject(first, 11);
print(first.list(['B1']))
Map.addLayer(first, {bands: ['B4', 'B3', 'B2'], min: 0, max: 2000}, 'first');

var p=ee.Geometry.Polygon(
  [[[19.898602492, 40.350335707328625 ],
  [19.893201331000004, 40.34733707632719],
  [19.891613918999997 ,40.34709969332711],
  [19.888915216999997, 40.34791652232746]]]);//, 19.888409844 40.350353639328645, 19.888591465 40.35362702333017, 19.892788147999998 40.35522844533092, 19.895705300999992 40.355593984331094, 19.896288318999996 40.35609799533131, 19.897413154999995 40.35957170833299, 19.899628582000002 40.36112006233374, 19.902866846 40.36079236333355, 19.904860961999994 40.358818012332655, 19.905403948999993 40.35597767633127, 19.905020807999993 40.35441374533054, 19.902080579000007 40.35147810832915, 19.898602492 40.350335707328625))')


*/
// Image

// Point
//var p = ee.Geometry.Point(16.5,43.7)
 var p=ee.Geometry.Polygon(
  [[[19.898602492, 40.350335707328625 ],
  [19.893201331000004, 40.34733707632719],
  [19.891613918999997 ,40.34709969332711],
  [19.888915216999997, 40.34791652232746],[19.898602492, 40.350335707328625 ]]]);//, 19.888409844 40.350353639328645, 19.888591465 40.35362702333017, 19.892788147999998 40.35522844533092, 19.895705300999992 40.355593984331094, 19.896288318999996 40.35609799533131, 19.897413154999995 40.35957170833299, 19.899628582000002 40.36112006233374, 19.902866846 40.36079236333355, 19.904860961999994 40.358818012332655, 19.905403948999993 40.35597767633127, 19.905020807999993 40.35441374533054, 19.902080579000007 40.35147810832915, 19.898602492 40.350335707328625))')
 

print(p)
/*
var im1 = ee.ImageCollection('COPERNICUS/S2_SR')
                .filterBounds( p.centroid())
                .filterDate('2019-01-01', '2019-01-05')
                .sort('CLOUDY_PIXEL_PERCENTAGE')
                .first();
                //ee.Image('COPERNICUS/S2')


// Extract the data
var data = im1
.select("B3")
.reduceRegion(ee.Reducer.first(),p,10)
.get("B3")
print(data)

// Convert to Number for further use
var dataN = ee.Number(data)

// Show data
print(dataN)



//print( im1.toBands())
// Add Layers
Map.centerObject(im1)
Map.addLayer(im1,{bands:["B1","B2","B3"],min:0,max:5000})
Map.addLayer(p)*/

var imageCol =ee.ImageCollection('COPERNICUS/S2')
                  .filterDate('2018-08-01', '2018-08-06')
                  // Pre-filter to get less cloudy granules.
                 .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 90))
//var imageArr=imageCol.toArray()
//var bar=ee.Array([2,3,5,7])

//var newIm=ee.Image.cat(ee.Image(500), ee.Image(500),ee.Image(500))
var i1=imageCol.first()
//print('imageCol',imageCol)
print('i1',i1)
//Map.addLayer(imageCol,{bands:["B4","B2","B3"],min:0,max:5000})
//Map.addLayer(newIm,{bands:["constant","constant_1","constant_2"],min:0,max:5000})
//var imageToprint= i1.gt(ee.Image(100))
var i3=i1.multiply(i1.lt(ee.Image(100)))
//var i3=imageCol.multiply(imageCol.gt(ee.Image(100)))
print(i3.reduceRegion(ee.Reducer.first(),p,1))
//Map.setCenter(16.5,43.5, 9); // Center on the Split
 //print(p.centroid().coordinates().get(1))
var c= p.centroid()
print('c',c)
var cc=c.coordinates()
print('cc',cc.getInfo())
var cx=cc.get(0)
var cy=cc.get(1)
//print('aaaa',c.toString().trim())
print(typeof(cx))
print(Number(cx)+1)
print('x',cx,'y',cy )
Map.setCenter(ee.Number(c.coordinates().get(0)).getInfo(),ee.Number(c.coordinates().get(1)).getInfo(),12); // Center on the Split

Map.addLayer(imageCol,{bands:["B4","B2","B3"],min:0,max:1000})
Map.addLayer(p)
var lastimage = imageCol.reduce(ee.Reducer.first());

print(lastimage.reduceRegion(ee.Reducer.first(),p,1))

//var img = lastimage.toBands();
//print(img)
