var library = require('users/perkovickarlo5/proba:Library').myModule;

// Use the imported module
//print(myModule.publicFunction());

function hasValidData(image) {
  // Check if the image has any unmasked pixels
  var maskSum = image.mask().reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: image.geometry(),
    scale: 30
  }).get('sum');
  return maskSum > 0;
}


var roi= library.rois["ciovo"]["geometry"]
var dataset = ee.ImageCollection('COPERNICUS/S3/OLCI')
                  .filterBounds(roi)
                  //.filterDate('2022-07-06', '2022-07-7');
                  .filterDate('2017-02-04', '2017-02-10')

print("broj slika je",dataset.size())

var prva = dataset.first()
print(prva)
// Convert ImageCollection to a List
var imageList = dataset.toList(dataset.size());
// Extract the first, second, and third images
var firstImage = ee.Image(imageList.get(0));
var secondImage = ee.Image(imageList.get(1));
var thirdImage = ee.Image(imageList.get(2));

print(1, firstImage)
print(2, secondImage)
print(3, thirdImage)

var rgbImage = firstImage
  .select('Oa02_radiance', 'Oa03_radiance', 'Oa04_radiance')
  .clip(roi)
  
var visualizationParams = {
  bands: ['Oa02_radiance', 'Oa03_radiance', 'Oa04_radiance'],
  min: 0,
  max: 1000
};

Map.centerObject(firstImage, 10); // Adjust zoom level and center as needed
Map.addLayer(rgbImage, visualizationParams, 'Sentinel-3 RGB');
/*
function createBandNames(n) {
  if (n>9) {
print(1, firstImage)
    return 'Oa' + String(n) + "_radiance"
  }
    return 'Oa0' + String(n) + "_radiance"
}

function provjeraPraznaSlika(image){
   var bands = image.reduceRegion({
    // Use ee.Reducer.minMax() to get min and max for each band
    reducer: ee.Reducer.min(),
    // Specify the region geometry
    geometry: roi,
    // Optional: Set the scale (pixel resolution) for the analysis
    // scale: 30 // Example scale in meters
  });
  
  var count = image.reduceRegion({
    reducer: ee.Reducer.count(),
    geometry: image.geometry(),
    scale: 30,
    maxPixels: 10e12
  });

  // Check if the count is zero
  print("count", count)
  if (count.getNumber('count') === 0) {
    print('Image has no valid pixels');
    return true
  }
  print("band 10 value:",bands.get("Oa10_radiance"));
  for(var i=1;i<22;i++){
    var bandValue= bands.get(createBandNames(i));
    print("band:", i, bandValue.idesh);
    if(bandValue) {}
    else {
      print("slika je prazna")
      return true
    }
  }
  print("slika nije prazna");
  return false;
}
  
print("Prazna li ne?", provjeraPraznaSlika(prva))
*/